{
  "info": {
    "_postman_id": "6b073a3e-7317-461a-a967-24825bba7296",
    "name": "Testora API",
    "description": "AI-powered educational platform API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "38801053"
  },
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('access_token', response.data.token);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Registration successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"oguzhandag88@gmail.com\",\n  \"password\": \"123456\",\n  \"name\": \"Oğuzhan Dağ\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.status === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.token) {",
                  "        pm.collectionVariables.set('access_token', response.data.token);",
                  "        console.log('Token saved:', response.data.token);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Login successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"oguzhandag88@gmail.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "login"]
            }
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Token refresh successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"{{access_token}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/refresh",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "refresh"]
            }
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"email\": \"oguzhandag88@gmail.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/forgot-password",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "forgot-password"]
            }
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"currentPassword\": \"1234567\",\r\n  \"newPassword\": \"123456\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/change-password",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "change-password"]
            }
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n  \"token\": \"f797f20f2876c93219aca3bb2bfd4d8346957e5f3418b74621120e4429901d4a\",\r\n  \"password\": \"1234567\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/reset-password",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "reset-password"]
            }
          },
          "response": []
        },
        {
          "name": "Send Verification",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update profile successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.user.name).to.eql('Updated Test User');",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/send-verification",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "send-verification"]
            }
          },
          "response": []
        },
        {
          "name": "Verify Email",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update profile successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.user.name).to.eql('Updated Test User');",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"7082dbf84b8698d65efcc7a57d2e2e8f85f79f5cb03bc08252fabd822aefc9f1\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/verify-email",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "verify-email"]
            }
          },
          "response": []
        },
        {
          "name": "Resend Verification",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update profile successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.user.name).to.eql('Updated Test User');",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"oguzhandag88@gmail.com\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/auth/resend-verification",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "auth", "resend-verification"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "User Profile",
      "item": [
        {
          "name": "Get Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get profile successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.user).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "profile"]
            }
          },
          "response": []
        },
        {
          "name": "Update Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update profile successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.user.name).to.eql('Updated Test User');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Test User\",\n  \"profile\": {\n    \"level\": \"intermediate\",\n    \"preferences\": {\n      \"studyTimePerDay\": 60,\n      \"preferredHours\": [\"09:00\", \"14:00\", \"20:00\"],\n      \"reminderSettings\": true,\n      \"difficulty\": \"adaptive\"\n    }\n  },\n  \"timezone\": \"Europe/Istanbul\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/users/profile",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "users", "profile"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Check",
      "item": [
        {
          "name": "Server Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Server is running', function () {",
                  "    pm.response.to.have.status(200);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Study System",
      "item": [
        {
          "name": "Get Lessons",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.lessons && response.data.lessons.length > 0) {",
                  "        pm.collectionVariables.set('lesson_id', response.data.lessons[0]._id);",
                  "        console.log('Lesson ID saved:', response.data.lessons[0]._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Get lessons successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study/lessons?level=beginner&category=English",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study", "lessons"],
              "query": [
                {
                  "key": "level",
                  "value": "beginner"
                },
                {
                  "key": "category",
                  "value": "English"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Topics by Lesson",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.topics && response.data.topics.length > 0) {",
                  "        pm.collectionVariables.set('topic_id', response.data.topics[0]._id);",
                  "        console.log('Topic ID saved:', response.data.topics[0]._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Get topics successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study/lessons/{{lesson_id}}/topics",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "study",
                "lessons",
                "{{lesson_id}}",
                "topics"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Start Study Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.session) {",
                  "        pm.collectionVariables.set('session_id', response.data.session._id);",
                  "        console.log('Session ID saved:', response.data.session._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Start session successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lessonId\": \"{{lesson_id}}\",\n  \"topicId\": \"{{topic_id}}\",\n  \"sessionType\": \"practice\",\n  \"questionCount\": 10,\n  \"difficulty\": \"easy\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/study/sessions/start",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study", "sessions", "start"]
            }
          },
          "response": []
        },
        {
          "name": "Get Active Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get active session successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study/sessions/active",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study", "sessions", "active"]
            }
          },
          "response": []
        },
        {
          "name": "Submit Answer",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Submit answer successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"sessionId\": \"{{session_id}}\",\n  \"questionId\": \"64a1b2c3d4e5f6g7h8i9j0k1\",\n  \"selectedOption\": \"A\",\n  \"timeSpent\": 45,\n  \"hintsUsed\": 0\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/study/sessions/submit-answer",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study", "sessions", "submit-answer"]
            }
          },
          "response": []
        },
        {
          "name": "End Study Session",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('End session successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study/sessions/{{session_id}}/end",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "study",
                "sessions",
                "{{session_id}}",
                "end"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get User Progress",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get progress successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study/progress?lessonId={{lesson_id}}&topicId={{topic_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study", "progress"],
              "query": [
                {
                  "key": "lessonId",
                  "value": "{{lesson_id}}"
                },
                {
                  "key": "topicId",
                  "value": "{{topic_id}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Study Plans",
      "item": [
        {
          "name": "Create Study Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.studyPlan) {",
                  "        pm.collectionVariables.set('plan_id', response.data.studyPlan._id);",
                  "        console.log('Plan ID saved:', response.data.studyPlan._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Create study plan successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"month\": \"2024-01\",\n  \"title\": \"KPSS Preparation Plan\",\n  \"description\": \"Complete KPSS preparation for January 2024\",\n  \"goals\": {\n    \"targetDate\": \"2024-01-30T00:00:00.000Z\",\n    \"examType\": \"KPSS\",\n    \"targetScore\": 85\n  },\n  \"planItems\": [\n    {\n      \"lessonId\": \"{{lesson_id}}\",\n      \"topicId\": \"{{topic_id}}\",\n      \"targetDate\": \"2024-01-15T00:00:00.000Z\",\n      \"duration\": 60,\n      \"priority\": \"high\"\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/study-plans",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study-plans"]
            }
          },
          "response": []
        },
        {
          "name": "Get User Study Plans",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get study plans successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study-plans",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study-plans"]
            }
          },
          "response": []
        },
        {
          "name": "Get Study Plan by ID",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get study plan successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/study-plans/{{plan_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study-plans", "{{plan_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Update Plan Item Status",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update plan item status successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"itemIndex\": 0,\n  \"status\": \"completed\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/study-plans/{{plan_id}}/items/status",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "study-plans",
                "{{plan_id}}",
                "items",
                "status"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Generate AI Study Plan",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Generate AI plan successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"examType\": \"KPSS\",\n  \"targetDate\": \"2024-03-15\",\n  \"studyTimePerDay\": 120,\n  \"currentLevel\": \"intermediate\",\n  \"weakAreas\": [\"Mathematics\", \"History\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/study-plans/generate-ai-plan",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "study-plans", "generate-ai-plan"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Admin - Content Management",
      "item": [
        {
          "name": "Create Lesson",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.lesson) {",
                  "        pm.collectionVariables.set('lesson_id', response.data.lesson._id);",
                  "        console.log('Lesson ID saved:', response.data.lesson._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Create lesson successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"English Grammar Basics\",\n  \"description\": \"Fundamental English grammar concepts for beginners\",\n  \"level\": \"beginner\",\n  \"category\": \"English\",\n  \"tags\": [\"grammar\", \"english\", \"basics\"],\n  \"estimatedDuration\": 120,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/lessons",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "lessons"]
            }
          },
          "response": []
        },
        {
          "name": "Get All Lessons",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get lessons successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/lessons",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "lessons"]
            }
          },
          "response": []
        },
        {
          "name": "Update Lesson",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update lesson successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Advanced English Grammar\",\n  \"description\": \"Advanced English grammar concepts\",\n  \"level\": \"advanced\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/lessons/{{lesson_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "lessons", "{{lesson_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Lesson",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Delete lesson successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/lessons/{{lesson_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "lessons", "{{lesson_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Topic",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.topic) {",
                  "        pm.collectionVariables.set('topic_id', response.data.topic._id);",
                  "        console.log('Topic ID saved:', response.data.topic._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Create topic successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lessonId\": \"{{lesson_id}}\",\n  \"name\": \"Present Tense\",\n  \"description\": \"Present tense forms and usage in English\",\n  \"difficulty\": 1,\n  \"order\": 1,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/topics",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "topics"]
            }
          },
          "response": []
        },
        {
          "name": "Get Topics by Lesson",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get topics successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/lessons/{{lesson_id}}/topics",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "admin",
                "lessons",
                "{{lesson_id}}",
                "topics"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Topic",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update topic successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Advanced Present Tense\",\n  \"description\": \"Advanced present tense concepts\",\n  \"difficulty\": 2\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/topics/{{topic_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "topics", "{{topic_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Topic",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Delete topic successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/topics/{{topic_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "topics", "{{topic_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Create Question",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    if (response.success && response.data.question) {",
                  "        pm.collectionVariables.set('question_id', response.data.question._id);",
                  "        console.log('Question ID saved:', response.data.question._id);",
                  "    }",
                  "}",
                  "",
                  "pm.test('Create question successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lessonId\": \"{{lesson_id}}\",\n  \"topicId\": \"{{topic_id}}\",\n  \"questionText\": \"She _____ to school every day.\",\n  \"questionType\": \"multiple_choice\",\n  \"options\": [\"go\", \"goes\", \"going\", \"gone\"],\n  \"correctAnswer\": \"goes\",\n  \"explanation\": \"'Goes' is the correct third person singular form.\",\n  \"difficulty\": \"easy\",\n  \"points\": 10,\n  \"timeLimit\": 60,\n  \"isActive\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/questions",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "questions"]
            }
          },
          "response": []
        },
        {
          "name": "Get Questions by Topic",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get questions successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/topics/{{topic_id}}/questions",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "admin",
                "topics",
                "{{topic_id}}",
                "questions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get Questions by Lesson",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Get questions successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/lessons/{{lesson_id}}/questions",
              "host": ["{{base_url}}"],
              "path": [
                "api",
                "v1",
                "admin",
                "lessons",
                "{{lesson_id}}",
                "questions"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update Question",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Update question successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"questionText\": \"She _____ to work every morning.\",\n  \"explanation\": \"'Goes' is the correct third person singular form in present tense.\",\n  \"difficulty\": \"medium\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/questions/{{question_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "questions", "{{question_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Delete Question",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Delete question successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/api/v1/admin/questions/{{question_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "questions", "{{question_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "Bulk Create Questions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Bulk create questions successful', function () {",
                  "    pm.response.to.have.status(201);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"questions\": [\n    {\n      \"lessonId\": \"{{lesson_id}}\",\n      \"topicId\": \"{{topic_id}}\",\n      \"questionText\": \"I _____ coffee in the morning.\",\n      \"questionType\": \"multiple_choice\",\n      \"options\": [\"drinks\", \"drink\", \"drinking\", \"drank\"],\n      \"correctAnswer\": \"drink\",\n      \"explanation\": \"'Drink' is the correct first person form.\",\n      \"difficulty\": \"easy\",\n      \"points\": 10,\n      \"isActive\": true\n    },\n    {\n      \"lessonId\": \"{{lesson_id}}\",\n      \"topicId\": \"{{topic_id}}\",\n      \"questionText\": \"They _____ football every weekend.\",\n      \"questionType\": \"multiple_choice\",\n      \"options\": [\"plays\", \"play\", \"playing\", \"played\"],\n      \"correctAnswer\": \"play\",\n      \"explanation\": \"'Play' is the correct form for plural subjects.\",\n      \"difficulty\": \"easy\",\n      \"points\": 10,\n      \"isActive\": true\n    }\n  ]\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/admin/questions/bulk",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "admin", "questions", "bulk"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "AI Services",
      "item": [
        {
          "name": "Generate Questions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Generate questions successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.questions).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"lessonId\": \"{{lesson_id}}\",\n  \"topicId\": \"{{topic_id}}\",\n  \"difficulty\": \"easy\",\n  \"questionType\": \"multiple_choice\",\n  \"count\": 5,\n  \"language\": \"tr\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ai/generate-questions",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ai", "generate-questions"]
            }
          },
          "response": []
        },
        {
          "name": "Generate Explanation",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Generate explanation successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.explanation).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"questionId\": \"{{question_id}}\",\n  \"userAnswer\": \"A\",\n  \"correctAnswer\": \"B\",\n  \"language\": \"tr\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ai/generate-explanation",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ai", "generate-explanation"]
            }
          },
          "response": []
        },
        {
          "name": "AI Chat",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('AI chat successful', function () {",
                  "    pm.response.to.have.status(200);",
                  "    pm.expect(pm.response.json().success).to.be.true;",
                  "    pm.expect(pm.response.json().data.response).to.exist;",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{access_token}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"message\": \"İngilizce present tense konusunda yardıma ihtiyacım var. Nasıl çalışmalıyım?\",\n  \"context\": {\n    \"lessonId\": \"{{lesson_id}}\",\n    \"topicId\": \"{{topic_id}}\",\n    \"recentQuestions\": [\"Present tense question 1\", \"Present tense question 2\"]\n  },\n  \"language\": \"tr\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/v1/ai/chat",
              "host": ["{{base_url}}"],
              "path": ["api", "v1", "ai", "chat"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{access_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000",
      "type": "string"
    },
    {
      "key": "access_token",
      "value": "",
      "type": "string"
    }
  ]
}
